/* 
LIST:
  - fixing grid css
  - fix timer bug
  - dim background when modals appear
  - start game functionality (assigning roles+loc)
  - assigning location + assign players roles and assign single spy
    - figure out what to do if roles < players
  - dont show player on card until they are assigned a role (for joining late functionality) (only for game page??)
  - adding pictures + modifying json
  - showing right picture on location card
  - showing role on role card
  - location card for spy player frontend

LATER:
  - deploy (aws, docker instance) + cleanup

DONE:
  - initialize the websocket
  - redirect if successful
  - create and finish joinRoom function
  - finish createRoom function
  - redirect if successful
  - figure out a way to store the codes and socketIDs?
  - If person disconnects handle cleanup
  - Create room and it renders lobby page
  - Modified lobby page
  - design new home page in figma (with player name input on first page)
  - do the frontend for new home page
  - CONFIGURED THE FAVICON YAY
  - home button on nav bar functionality
  - display players card
  - name card
  - time card
  - card that displays roomId (with copy paste functionality)
  - start game button
  - rules card
  - actually get all the players in tahe room
  - get player name
  - get room id
  - only host can start game functionality
  - figure out how to store/emit game data
  - create json with all game information (locations, with roles)
  - figure out how to send data from server
  - game page: resuse name card, vote card, link card
  - time card
  - create end game button, location card (for non-spy player) and role card
  - rules modal
  - do css grid for game page
  - start game functionality (starting timer, routing to correct page,
  - end game button functionality
  - joining late functionality 
  - end game modal
*/

{
  $roomid: {
    state: 'lobby' or 'in progress'
    location: '',
    players: [{
      id: '',
      name: '',
      role: '',
    }],
    host: ''
  },
}